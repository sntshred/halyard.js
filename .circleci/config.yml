version: 2
jobs:
  build:
    working_directory: ~/halyard.js
    docker:
      - image: circleci/node:8.11.2
    steps:
      - checkout
      - restore_cache:
          key: npm-dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install --no-save -s
      - save_cache:
          key: npm-dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Build
          command: npm run build
      - run:
          name: Linting
          command: npm run lint
      - run:
          name: Unit testing
          command: npm run test:unit
      - run:
          name: Publish coverage artifacts to coverall
          command: npm run coverage
      - setup_remote_docker
      - run:
          name: Execute integration tests
          command: |
            ENGINE_VERSION=$(curl -s "https://registry.hub.docker.com/v2/repositories/qlikcore/engine/tags/" | docker run -i stedolan/jq -r '."results"[0]["name"]' 2>/dev/null)
            echo "Will start Qlik Associative Engine version '$ENGINE_VERSION'"
            ENGINE_CONTAINER_ID=$(docker run -v $PWD/examples/data:$PWD/examples/data -d qlikcore/engine:$ENGINE_VERSION -S AcceptEULA=yes)
            ENGINE_IP=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' $ENGINE_CONTAINER_ID)
            TEST_CONTAINER_ID=$(docker run -d node:8.11.1-alpine tail -f /dev/null)
            docker cp . $TEST_CONTAINER_ID:/
            docker exec $TEST_CONTAINER_ID /bin/sh -c 'apk update && apk add --no-cache socat bash'
            docker exec -d $TEST_CONTAINER_ID /bin/bash -c "socat TCP-LISTEN:4848,fork TCP:$ENGINE_IP:9076"
            docker exec $TEST_CONTAINER_ID /bin/bash -c 'npm run -s test:integration'
      - store_artifacts:
          path: dist
